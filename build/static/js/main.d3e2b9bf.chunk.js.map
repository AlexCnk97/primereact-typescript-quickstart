{"version":3,"sources":["pages/Login.tsx","components/dashboard/header.tsx","helpers/date.options.ts","components/dashboard/DateParam.tsx","components/dashboard/ProductosVendidosTable.tsx","services/ApiService.ts","components/dashboard/CustomBarChart.tsx","helpers/chart.theme.ts","pages/DashboardMain.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Login","onHandleLogin","useState","usuario","setUsuario","pass","setPass","history","useHistory","header","alt","src","footer","className","onClick","console","log","setTimeout","push","label","icon","title","style","width","value","onChange","e","currentTarget","placeholder","HeaderDash","height","dateOptions","name","Date","now","DateParams","handleDateChange","date1","setDate1","selectButton","setSelectButton","isDisabled","setIsDisabled","ref","useRef","setCurrentDate","data","caso","undefined","keepInvalid","showIcon","selectionMode","disabled","options","optionLabel","DataTableFilterDemo","params","fecha","nombre","precio","precio_oferta","totalrows","unidades_vendidas","url","valor_venta","setData","first","setFirst","rows","setRows","totalrws","setTotalrws","fetchData","search","a","limit","offset","axios","get","param1","param2","then","resp","catch","error","useEffect","valor","target","totalRecords","rowsPerPageOptions","onPageChange","event","page","loading","resizableColumns","columnResizeMode","field","body","row","Fragment","href","ApiService","endpoint","Promise","resolve","reject","CustomBarChart","type","labels","datasets","y","fill","borderColor","backgroundColor","basicData","x","basicOptions","legend","fontColor","scales","xAxes","ticks","callback","substr","yAxes","multiAxisOptions","responsive","hoverMode","stacked","gridLines","color","display","position","id","drawOnChartArea","getLightTheme","DashboardMain","setRwsTb1","productosMasVendidos","setProductosMasVendidos","mayorMargen","setMayorMargen","ventasDepto","setVentasDepto","ventasDiarias","setVentasDiarias","setProdVendidosTbl","setParams","promises","promise1","getDashboardChart","promise2","promise3","promise4","promise5","getDashboardTable","all","dates","toISOString","split","length","DateParam","flatMap","total_ventas","departamento","product_name","total_unidades_vendidas","severity","text","App","loggin","setLoggin","onLogin","isLoggin","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d3e2b9bf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card } from 'primereact/card';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface Props{\r\n    onHandleLogin(isLoggin:boolean):void\r\n}\r\n\r\nconst Login: React.FC<Props> = ({onHandleLogin}) => {\r\n    const [usuario, setUsuario] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const history = useHistory<any>();\r\n\r\n    const onLogin = ()=>{\r\n        console.log(\"hey\")\r\n        let username = \"Admin\";\r\n        let passwd = \"CLOBI2021\";\r\n        if(usuario == username && pass == passwd){\r\n            onHandleLogin(true);\r\n            setTimeout(()=>{\r\n                history.push(\"/dashboard\")\r\n            },500)\r\n        }\r\n    }\r\n\r\n    const header = (\r\n        <img alt=\"Card\" src=\"https://womancart.in/images/login-img-n.svg\" />\r\n    );\r\n    const footer = (\r\n        <span className=\"\">\r\n            <Button onClick={onLogin} label=\"Entrar\" icon=\"pi pi-sign-in\" />\r\n        </span>\r\n    );\r\n    return (\r\n        <>\r\n            <br />\r\n            <div className=\"main\">\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-col-12\">\r\n                        <Card  title=\"Iniciar Sesion\" style={{ width: '25em' }} footer={footer} header={header}>\r\n                            <div className=\"p-grid p-d-flex p-jc-center p-ai-center p-flex-column\">\r\n                                <div className=\"p-col-12\">\r\n                                    <span className=\"p-input-icon-left\">\r\n                                       \r\n                                        <InputText value={usuario} onChange={(e) => setUsuario(e.currentTarget.value)} placeholder=\"Usuario\" />\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"p-col-12\">\r\n                                    <span className=\"p-input-icon-left\">\r\n                                        \r\n                                        <InputText value={pass} onChange={(e) => setPass(e.currentTarget.value)} placeholder=\"Contraseña\" />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\ninterface Props{\r\n    title:string;\r\n}\r\n\r\n\r\nconst HeaderDash:React.FC<Props> = ({title}) => {\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <div className=\"p-col-6 p-d-flex p-jc-start p-ai-center\">\r\n                <span>{title}</span>\r\n            </div>\r\n            <div className=\"p-col-6 p-d-flex p-jc-end p-ai-center\">\r\n                <img style={{ height: 45 }} src=\"https://clobi.online/img/Clobi_Logo.png\" alt=\"clobi_logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderDash;","export const CALCULATED_DATE = 24 * 60 * 60 * 1000;\r\n\r\nexport interface DATEOPTIONS{\r\n    name:string;\r\n    value:Date | Date[];\r\n}\r\n\r\nexport const dateOptions: DATEOPTIONS[] = [\r\n    { name: 'Hoy', value: [new Date(Date.now())]},\r\n    { name: 'Últimos 7 días', value: [new Date(Date.now() - 7 * CALCULATED_DATE), new Date(Date.now()) ]},\r\n    { name: 'Últimos 15 días', value: [new Date(Date.now() - 15 * CALCULATED_DATE), new Date(Date.now()) ] },\r\n    { name: 'Hace un mes', value: [new Date(Date.now() - 31 * CALCULATED_DATE), new Date(Date.now()) ] }\r\n];","import React, { useRef } from 'react';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { SelectButton } from 'primereact/selectbutton';\r\nimport { useState } from 'react';\r\nimport { DATEOPTIONS, dateOptions } from '../../helpers/date.options';\r\n\r\n\r\nimport '../../App.css';\r\nimport 'primeflex/primeflex.css';\r\n\r\ninterface Props{\r\n    handleDateChange: Function;\r\n}\r\n\r\nconst DateParams:React.FC<Props> = ({handleDateChange}) => {\r\n    const [date1, setDate1] = useState<Date | Date[]>();\r\n    const [selectButton, setSelectButton] = useState<DATEOPTIONS>();\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const ref = useRef<Calendar>(null)\r\n\r\n\r\n    const setCurrentDate = <T extends Date | Date[] | DATEOPTIONS>(data:T,caso:number) =>{\r\n        if(data){\r\n            if(caso == 0){  \r\n                setIsDisabled(false);        \r\n                setDate1(data as Date | Date[]); \r\n                setSelectButton(undefined); \r\n                handleDateChange(data as Date | Date[]); \r\n            }else{ \r\n                setIsDisabled(true);\r\n                setSelectButton(data as DATEOPTIONS); \r\n                setDate1((data as DATEOPTIONS).value); \r\n                handleDateChange((data as DATEOPTIONS).value);\r\n            }\r\n        }else{\r\n            setSelectButton(undefined);\r\n            \r\n            setIsDisabled(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <div className=\"p-col-12 dateparam\">\r\n                <Calendar\r\n                    ref={ref}\r\n                    keepInvalid\r\n                    value={date1}\r\n                    onChange={(e) => setCurrentDate(e.value, 0)}\r\n                    showIcon\r\n                    placeholder=\"Rango de fecha\"\r\n                    selectionMode=\"range\"\r\n                    disabled={isDisabled}\r\n                     />\r\n                <SelectButton\r\n                    \r\n                    value={selectButton}\r\n                    options={dateOptions}\r\n                    onChange={(e) => setCurrentDate(e.value as DATEOPTIONS,1)}\r\n                    optionLabel=\"name\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateParams;","import React, { useState, useEffect, useRef, ChangeEvent, ReactNode } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { PageState, Paginator } from 'primereact/paginator';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport './DataTableDemo.css';\r\nimport axios from 'axios';\r\nimport { ProductosVendidos } from '../../interfaces/productos.vendidos';\r\n\r\n\r\ninterface Props{\r\n    params:{param1:string, param2:string};\r\n}\r\n\r\nconst DataTableFilterDemo:React.FC<Props> = ({params}) => {\r\n    const [data, setData] = useState<ProductosVendidos[]>([\r\n        {\r\n            fecha: (new Date),\r\n            nombre: \"\",\r\n            precio:0,\r\n            precio_oferta:0,\r\n            totalrows:10,\r\n            unidades_vendidas:0,\r\n            url:\"\",\r\n            valor_venta:0\r\n        }\r\n    ])\r\n    const [searchbox, setSearchbox] = useState(\"\");\r\n    const [first, setFirst] = useState(0);\r\n    const [rows, setRows] = useState(10);\r\n    const [totalrws, setTotalrws] = useState<number>(10);\r\n\r\n    const fetchData = async (search: string | null, limit = 10, offset = 1) => {\r\n        axios.get(`http://18.223.186.183:8000/api/dashboard/productos-vendidos?dateparam1=${params.param1}&dateparam2=${params.param2}&searchbox=${search}&limit=${limit}&offset=${offset}`).then(resp => {\r\n            if (resp.data.data)\r\n                setData(resp.data.data);\r\n                setTotalrws(resp.data.data[0].totalrows)\r\n        }).catch(e => {\r\n            console.error(e);\r\n        })\r\n    }\r\n\r\n\r\n    const buscar = (valor: ChangeEvent<HTMLInputElement>) => {\r\n        fetchData(valor.target.value);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData(\"\");\r\n    }, [params])\r\n\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n            Productos vendidos\r\n            <InputText placeholder=\"Buscar producto\" onChange={buscar} />\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    const onPageChange = (event: PageState) => {\r\n        setFirst(event.first);\r\n        fetchData('', event.rows, (event.page + 1));\r\n        setRows(event.rows);\r\n    }\r\n\r\n\r\n    const footer = <Paginator first={first} rows={rows} totalRecords={totalrws} rowsPerPageOptions={[10, 20, 30]} onPageChange={onPageChange}></Paginator>;\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <div className=\"p-col-12\">\r\n                <div className=\"datatable-responsive-demo\">\r\n                    <div className=\"card\">\r\n                        <DataTable\r\n                            value={data}\r\n                            loading={!data}\r\n                            header={header}\r\n                            footer={footer}\r\n                            resizableColumns\r\n                            columnResizeMode=\"fit\"\r\n                            className=\"p-datatable-responsive-demo\">\r\n                            <Column field=\"nombre\" body={(row: ProductosVendidos) => {\r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <p><a href={row.url} target=\"_blank\">{row.nombre}</a></p>\r\n                                    </React.Fragment>\r\n                                )\r\n                            }} header=\"Nombre de producto\" style={{width:'60%'}} />\r\n                            <Column field=\"precio\" header=\"Precio de producto\" style={{width:'10%'}} />\r\n                            <Column field=\"precio_oferta\" header=\"Precio oferta\" style={{width:'10%'}} />\r\n                            <Column field=\"unidades_vendidas\" header=\"Unidades vendidas\" style={{width:'10%'}} />\r\n                            <Column field=\"valor_venta\" header=\"Valor de venta\" style={{width:'10%'}} />\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataTableFilterDemo;","import axios from \"axios\";\r\nimport { Interface } from \"readline\";\r\nimport { ChartResponse } from \"../interfaces/chart.line\";\r\n\r\nexport class ApiService {\r\n    constructor() { }\r\n\r\n    static getDashboardChart(endpoint: string, param1 = 'null', param2 = 'null') {\r\n        return new Promise<any>((resolve, reject) => {\r\n            axios.get(`http://18.223.186.183:8000/api/dashboard/${endpoint}?dateparam1=${param1}&dateparam2=${param2}`).then(resp => {\r\n                if (resp.data.data) {\r\n                    console.log(resp.data.data)\r\n                    resolve(resp.data.data);\r\n                }\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        })\r\n    }\r\n\r\n    static getDashboardTable(endpoint: string, param1 = 'null', param2 = 'null', search = \"\", limit = '10', offset = '1'){\r\n        return new Promise<any>((resolve, reject) => {\r\n            axios.get(`http://18.223.186.183:8000/api/dashboard/${endpoint}?dateparam1=${param1}&dateparam2=${param2}&searchbox=${search}&limit=${limit}&offset=${offset}`).then(resp => {\r\n                if (resp.data.data) {\r\n                    console.log(resp.data.data)\r\n                    resolve(resp.data.data);\r\n                }\r\n            }).catch(e => {\r\n                reject(e);\r\n            })\r\n        })\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Chart } from 'primereact/chart';\r\nimport { getLightTheme } from '../../helpers/chart.theme';\r\n\r\ninterface Props {\r\n    labels: {\r\n        x: any,\r\n        y: any\r\n    };\r\n    type: string;\r\n    title: string;\r\n}\r\n\r\ninterface DATASET {\r\n    label: any,\r\n    data: any,\r\n    fill: boolean,\r\n    backgroundColor?: any;   \r\n    borderColor?:any;\r\n}\r\n\r\nconst CustomBarChart: React.FC<Props> = ({ type, labels, title }) => {\r\n    let datasets: DATASET = {\r\n        label: title,\r\n        data: labels.y,\r\n        fill: false,\r\n    };\r\n    if(type == \"line\"){\r\n        datasets.borderColor = \"#7A16BD\"\r\n    }else{\r\n        datasets.backgroundColor = \"#7A16BD\"\r\n    }\r\n    \r\n\r\n    const basicData = {\r\n        labels: labels.x,\r\n        datasets: [datasets]\r\n    };\r\n\r\n    const { basicOptions } = getLightTheme();\r\n    return (\r\n        <div className=\"p-grid\">\r\n            <div className=\"p-col-12\">\r\n                <Chart type={type} data={basicData} options={basicOptions} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomBarChart;","export const getLightTheme = (caso:number = 0) => {\r\n    let basicOptions  = {\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    callback: function(value:any) {\r\n                        if(value){\r\n                            return caso == 0 ? value.substr(0, 15) + '...' : value;//truncate\r\n                        }\r\n                    },\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057',\r\n                    callback: function(value:any) {\r\n                        if(value){\r\n                            return (value / 1000) + ' k';//truncate\r\n                        }\r\n                    },\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    let multiAxisOptions = {\r\n        responsive: true,\r\n        hoverMode: 'index',\r\n        stacked: false,\r\n        scales: {\r\n            xAxes: [{\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                },\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                type: 'linear',\r\n                display: true,\r\n                position: 'left',\r\n                id: 'y-axis-1',\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                },\r\n                gridLines: {\r\n                    color: '#ebedef'\r\n                }\r\n            }, {\r\n                type: 'linear',\r\n                display: true,\r\n                position: 'right',\r\n                id: 'y-axis-2',\r\n                ticks: {\r\n                    fontColor: '#495057'\r\n                },\r\n                gridLines: {\r\n                    drawOnChartArea: false,\r\n                    color: '#ebedef'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: '#495057'\r\n            }\r\n        }\r\n    };\r\n\r\n    return {\r\n        basicOptions,\r\n        multiAxisOptions\r\n    }\r\n}\r\n","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport HeaderDash from '../components/dashboard/header';\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport '../App.css';\r\nimport DateParams from '../components/dashboard/DateParam';\r\nimport DataTableFilterDemo from '../components/dashboard/ProductosVendidosTable';\r\nimport { ApiService } from '../services/ApiService';\r\nimport { VentasDiarias } from '../interfaces/ventas.diarias';\r\nimport CustomBarChart from '../components/dashboard/CustomBarChart';\r\nimport { ProductosMasVendidos, ProductosMayorMargen } from '../interfaces/productos.mas.vendidos';\r\nimport { VentasDepto } from '../interfaces/ventas.depto';\r\nimport CustomTable from '../components/dashboard/CustomTable';\r\nimport { ProductosVendidos } from '../interfaces/productos.vendidos';\r\nimport { PageState } from 'primereact/paginator';\r\nimport { Column } from 'primereact/column';\r\nimport { Message } from 'primereact/message';\r\nimport { DataTable } from 'primereact/datatable';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DashboardMain: React.FC = () => {\r\n    const [rwsTb1, setRwsTb1] = useState(10);\r\n    const [productosMasVendidos, setProductosMasVendidos] = useState<ProductosMasVendidos[]>();\r\n    const [mayorMargen, setMayorMargen] = useState<ProductosMayorMargen[]>();\r\n    const [ventasDepto, setVentasDepto] = useState<VentasDepto[]>();\r\n    const [ventasDiarias, setVentasDiarias] = useState<VentasDiarias[]>();\r\n    const [prodVendidosTbl, setProdVendidosTbl] = useState<ProductosVendidos[]>([\r\n        {\r\n            fecha: (new Date),\r\n            nombre: \"\",\r\n            precio: 0,\r\n            precio_oferta: 0,\r\n            totalrows: 10,\r\n            unidades_vendidas: 0,\r\n            url: \"\",\r\n            valor_venta: 0\r\n        }\r\n    ]);\r\n    const [params,setParams] = useState({param1:'null',param2: 'null'});\r\n\r\n\r\n\r\n    const fetchData = async (param1 = 'null', param2 = 'null') => {\r\n        const promises = [];\r\n        let promise1 = ApiService.getDashboardChart(\"productos-mas-vendidos\", param1, param2);\r\n        let promise2 = ApiService.getDashboardChart(\"productos-mayor-margen\", param1, param2);\r\n        let promise3 = ApiService.getDashboardChart(\"ventas-depto\", param1, param2);\r\n        let promise4 = ApiService.getDashboardChart(\"ventas-diarias\", param1, param2);\r\n        let promise5 = ApiService.getDashboardTable(\"productos-vendidos\", param1, param2);\r\n        promises.push(promise1);\r\n        promises.push(promise2);\r\n        promises.push(promise3);\r\n        promises.push(promise4);\r\n        promises.push(promise5);\r\n        Promise.all(promises).then(resp => {\r\n            setProductosMasVendidos(resp[0] as ProductosMasVendidos[]);\r\n            setMayorMargen(resp[1] as ProductosMayorMargen[]);\r\n            setVentasDepto(resp[2] as VentasDepto[]);\r\n            setVentasDiarias(resp[3] as VentasDiarias[]);\r\n            setProdVendidosTbl(resp[4] as ProductosVendidos[]);\r\n            if (resp[4][0]) {\r\n                setRwsTb1(resp[4][0].totalrows);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleDateChange = (dates: Date[]) => {\r\n        if (dates) {\r\n            let param1 = dates[0].toISOString().split('T')[0];\r\n\r\n            let param2 = dates[1] ? dates[1].toISOString().split('T')[0] : new Date().toISOString().split('T')[0];\r\n            console.log(param1, param2);\r\n            fetchData(param1, param2);\r\n            setParams({param1: param1, param2: param2});\r\n        }\r\n    }\r\n\r\n    const onPageTableChange = async (event: PageState) => {\r\n        let results = await ApiService.getDashboardTable(\"productos-vendidos\", 'null', 'null', \"\", event.rows.toString(), (event.page + 1).toString());\r\n        setProdVendidosTbl(results as ProductosVendidos[]);\r\n    }\r\n\r\n    const onSearchTable = async (event: ChangeEvent<HTMLInputElement>) => {\r\n        let results = await ApiService.getDashboardTable(\"productos-vendidos\", 'null', 'null', event.currentTarget.value);\r\n        setProdVendidosTbl(results as ProductosVendidos[]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container\">\r\n                <HeaderDash title=\"Ventas\" />\r\n                {ventasDiarias && ventasDiarias.length>0 ? (\r\n                    <div>\r\n                        <DateParams handleDateChange={handleDateChange} />\r\n                        <div className=\"p-grid\">\r\n                            <div className=\"p-col-12\">\r\n                                <CustomBarChart\r\n                                    labels={{ x: ventasDiarias?.flatMap(x => x.fecha), y: ventasDiarias?.flatMap(x => x.total_ventas) }}\r\n                                    title=\"Total de ventas\"\r\n                                    type=\"line\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-grid\">\r\n                            <div className=\"p-col-12\">\r\n                                <CustomBarChart\r\n                                    labels={{ x: ventasDepto?.flatMap(x => x.departamento), y: ventasDepto?.flatMap(x => x.total_ventas) }}\r\n                                    title=\"Ventas por departamento\"\r\n                                    type=\"bar\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <br /><br />\r\n                        <div className=\"p-grid\">\r\n                            <div className=\"p-col-6\">\r\n                                <CustomBarChart\r\n                                    labels={{ x: productosMasVendidos?.flatMap(x => x.product_name), y: productosMasVendidos?.flatMap(x => x.total_unidades_vendidas) }}\r\n                                    title=\"Productos mas vendidos\"\r\n                                    type=\"bar\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"p-col-6\">\r\n                                <CustomBarChart\r\n                                    labels={{ x: mayorMargen?.flatMap(x => x.product_name), y: mayorMargen?.flatMap(x => x.total_ventas) }}\r\n                                    title=\"Productos con mayor margen\"\r\n                                    type=\"bar\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <br /><br />\r\n                        <DataTableFilterDemo params={params}/>\r\n                        {/* <CustomTable\r\n                            data={prodVendidosTbl}\r\n                            title=\"Productos Vendidos\"\r\n                            searchPlaceholder=\"Buscar productos\"\r\n                            totalRecords={rwsTb1}\r\n                            onPaginatorChange={(e) => onPageTableChange(e)}\r\n                            onSearch={e => onSearchTable(e)} >\r\n                            <Column field=\"nombre\" body={(row: ProductosVendidos) => {\r\n                                return (\r\n                                    <React.Fragment>\r\n                                        <p><a href={row.url} target=\"_blank\">{row.nombre}</a></p>\r\n                                    </React.Fragment>\r\n                                )\r\n                            }} header=\"Nombre de producto\" style={{ width: '60%' }} />\r\n                            <Column field=\"precio\" header=\"Precio de producto\" style={{ width: '10%' }} />\r\n                            <Column field=\"precio_oferta\" header=\"Precio oferta\" style={{ width: '10%' }} />\r\n                            <Column field=\"unidades_vendidas\" header=\"Unidades vendidas\" style={{ width: '10%' }} />\r\n                            <Column field=\"valor_venta\" header=\"Valor de venta\" style={{ width: '10%' }} />\r\n                        </CustomTable> */}\r\n                    </div>\r\n                ) : \r\n                (<div className=\"p-d-flex p-jc-center p-ai-center p-flex-column\">\r\n                    <br/><br/><br/>\r\n                    <DateParams handleDateChange={handleDateChange} />\r\n                    <br/>\r\n                    <Message severity=\"info\" text=\"No se encontro ningun dato para ser procesado en esta fecha. \" />\r\n\r\n                </div>)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardMain;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useHistory,\r\n    RouteComponentProps\r\n  } from \"react-router-dom\";\r\n\r\n\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport './App.css';\r\nimport Login from './pages/Login';\r\nimport DashboardMain from './pages/DashboardMain';\r\n\r\n\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n    const [loggin,setLoggin] = useState(false);\r\n\r\n\r\n\r\n    const onLogin =(isLoggin:boolean)=>{\r\n          setLoggin(isLoggin);\r\n    }\r\n    return (\r\n        <Router>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <Login onHandleLogin={onLogin}/>\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <DashboardMain/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {loggin ? <DashboardMain /> : <Login onHandleLogin={onLogin}/>}\r\n          </Route>\r\n        </Switch>\r\n      \r\n    </Router>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}